<project xmlns:ivy="antlib:org.apache.ivy.ant" name="Web3" default="build">
    <property file="build.properties"/>

    <path id="lib.classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <pathelement location="${lib}/${junit}"/>
        <pathelement location="${lib}/${hamcrest}"/>
        <pathelement location="${classes}"/>
        <pathelement location="${target}/test"/>
    </path>

    <target name="resolve">
        <ivy:resolve file="${ivy}"/>
        <ivy:retrieve pattern="${lib}/[artifact]-[type]-[revision].[ext]"/>
    </target>

    <target name="compile" depends="resolve" description="compile java files">
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${target}"/>
        <javac includeantruntime="false" destdir="${classes}" source="8">
            <src path="${main}"/>
            <classpath refid="lib.classpath"/>
        </javac>
    </target>

    <target name="build" depends="compile" description="create jar file">
        <war destfile="${target}/${war.name}.war" webxml="${web_xml}">
            <classes dir="${classes}"/>
            <lib dir="${lib}"/>
            <fileset dir="${main}/webapp/"/>
            <manifest>
                <attribute name="Manifest-Version" value="1.0"/>
            </manifest>
        </war>
        <manifest file="MANIFEST.MF">
            <attribute name="Manifest-Version" value="1.0"/>
        </manifest>
    </target>

    <target name="clean" description="delete compiled project classes and all temporary files">
        <delete dir="${target}"/>
        <echo>Delete target dir</echo>
        <delete dir="${build}"/>
        <echo>Delete build dir</echo>
        <delete file="MANIFEST.MF"/>
        <echo>Delete MANIFEST.MF</echo>
        <delete dir="${lib}"/>
        <echo message="lib directory deleted"/>
    </target>

    <target name="test" depends="build" description="test Checker class">
        <mkdir dir="${target}/test"/>
        <mkdir dir="${target}/test-classes"/>

        <javac includeantruntime="false" destdir="${target}/test-classes" source="8">
            <src path="${src}/test/java"/>
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${classes}"/>
                <fileset dir="${lib}"/>
            </classpath>
        </javac>

        <copy todir="${target}/test" >
            <fileset dir="${classes}"/>
        </copy>
        <copy todir="${target}/test">
            <fileset dir="${target}/test-classes"/>
        </copy>

        <junit haltonfailure="yes" printsummary="yes">
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${test}"/>
            </classpath>
            <test  name="com.edu.Web3.CheckerTest" haltonfailure="no" fork="yes" outfile="${target}/test-result">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <target name="doc" depends="build">
        <checksum algorithm="SHA-1" file="${target}/Web3.war" property="sha-1"/>
        <checksum algorithm="MD5" file="${target}/Web3.war" property="md5"/>

        <manifest mode="update" file="MANIFEST.MF">
            <attribute name="sha-1-checksum" value="${sha-1}"/>
            <attribute name="md5-checksum" value="${sha-1}"/>
        </manifest>

        <javadoc destdir="${doc}">
            <fileset dir="${main}"/>
            <classpath refid="lib.classpath"/>
        </javadoc>

        <war destfile="${target}/Web3_with_javadoc.war" webxml="${web_xml}">
            <classes dir="${classes}"/>
            <lib dir="${lib}"/>
            <fileset dir="${main}/webapp/"/>
            <fileset dir="${doc}"/>
        </war>

    </target>

    <target name="team" description="get last 3 commits, build them and pack in zip">
        <mkdir dir="temp"/>

        <mkdir dir="temp/one"/>
        <exec command="git" dir="temp/one">
            <arg value="clone"/>
            <arg value="-b"/>
            <arg value="ant"/>
            <arg value="${repository}"/>
        </exec>
        <antcall target="build">
            <param name="lib" value="${basedir}/lib"/>
            <param name="ivy" value="${basedir}/${ivy}"/>
            <param name="basedir" value="temp/one/${name}"/>
            <param name="war.name" value="${war.name}_1"/>
        </antcall>

        <mkdir dir="temp/two"/>
        <exec command="git" dir="temp/two">
            <arg value="clone"/>
            <arg value="-b"/>
            <arg value="ant"/>
            <arg value="${repository}"/>
        </exec>
        <exec executable="git" dir="temp/two/${name}">
            <arg value="checkout"/>
            <arg value="HEAD~1"/>
        </exec>
        <antcall target="build">
            <param name="lib" value="${basedir}/lib"/>
            <param name="ivy" value="${basedir}/${ivy}"/>
            <param name="basedir" value="temp/two/${name}"/>
            <param name="war.name" value="${war.name}_2"/>
        </antcall>

        <mkdir dir="temp/three"/>
        <exec executable="git" dir="temp/three">
            <arg value="clone"/>
            <arg value="-b"/>
            <arg value="ant"/>
            <arg value="${repository}"/>
        </exec>
        <exec executable="git" dir="temp/three/${name}">
            <arg value="checkout"/>
            <arg value="HEAD~2"/>
        </exec>
        <antcall target="build">
            <param name="lib" value="${basedir}/lib"/>
            <param name="ivy" value="${basedir}/${ivy}"/>
            <param name="basedir" value="temp/three/${name}"/>
            <param name="war.name" value="${war.name}_3"/>
        </antcall>

        <zip  destfile="${target}/team.zip">
            <zipfileset dir="temp/one/${name}/target"/>
            <zipfileset dir="temp/two/${name}/target"/>
            <zipfileset dir="temp/three/${name}/target"/>
        </zip>
        <delete dir="temp"/>
    </target>
</project>